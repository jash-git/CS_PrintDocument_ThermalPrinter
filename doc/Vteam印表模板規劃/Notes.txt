系統運算全域變數:
	ObjectStack(Page/Table/Block/Rows)
	Last_X
	Last_Y
	Max_Height (同一列，Y值未變化時持續紀錄)
	Last_Height = Max_Height (不同列時，運算用)
	
	EX: Last_Heigh=Max_Height=00
		═ ═ ═ Last_Heigh=00/Max_Height=10 (i=0)
		═ ╦ ═ Last_Heigh=10/Max_Height=20 (i=1)
		═ ═ ═ Last_Heigh=20/Max_Height=10 (i=2)
		═ ═ ═ Last_Heigh=10/Max_Height=10 (i=3)
	

系統常數:
	四倍字 : new Font("新細明體",40) ; Height(Width) = 13mm
	雙倍字 : new Font("新細明體",28) ; Height(Width) = 11mm
	單倍字 : new Font("新細明體", 13) ; Height(Width) = 5mm
	一般字 : new Font("新細明體", 9) ; Height(Width) = 3mm
	電子發票標題 : new Font("新細明體", 16) ; Height(Width) = 6mm

	
相關公式整理:
	文字太長自動換行後的Height : N*字高 + (N-1)*VerticalSpacing ;其中 N=((int)(Width/字寬))+(Width%字寬)
	文字寬度置中文字起始X座標計算 : (起始X + Width/2) - (總字數*字寬/2)
	文字寬度靠右文字起始X座標計算 : (起始X + Width) - (總字數*字寬)
	文字高度置中文字起始Y座標計算 : (起始Y + Height/2) - (N*字高/2)
	文字高度靠下文字起始Y座標計算 : (起始Y + Height) - (N*字高)

	子元件的第一個[Y_Alignment = "Y"] Y計算 : (前一元件Y + 現在Y)
	子元件的第一個[Y_Alignment = "Element"] Y計算 : (前一元件Y)
	子元件的第一個[Y_Alignment = "Increment"] : 
		Loop(i=0) Y計算 : (前一元件Y + 現在Y)
		Loop(i≠0) Y計算 : (前一元件Y + 前一元件Height + 1)
	子元件結束後 透過取出 ObjectStack 判斷是否為Block進行 Last_X、Last_Y、Max_Height值的對應修正
	
	判斷換列:前後元件X相同 [Y_Alignment = "Increment"]
	判斷換行:前後元件Y相同 [Y_Alignment = "Element"]
	
	元件同列 X計算 : (前一元件X + 前一元件Width + 1)
	元件同列 Y計算 : (前一元件Y) [固定 "Element"]
	元件換列 X計算 : (前一元件X)
	元件換列 Y計算 : [前一元件Y + 前一元件Height + 1] [固定 "Increment"]

	